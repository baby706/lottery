/*************************************************************************
	> File Name: src/user.c
	> Author: Liang Bo
	> Mail: cs-b@163.com 
	> Function: 
	> Created Time: 2016年08月12日 星期五 12时05分20秒
 ************************************************************************/

#include "base.h"




//底层函数
//创建节点，将新的数据块存入userLink结构体
struct userLink* creatUserNode(struct user data)
{
	struct userLink* new = (struct userLink*)calloc(1,sizeof(struct userLink));
	new->data = data;
	new->next = NULL;

	return new;
}

//后向插入，将创建的节点插入userLink链表尾部
void insertAfterUser(struct userLink* p,struct user data)
{
	char* path = calloc(30,sizeof(char));
	path = strcat("./data/user/u/",data.id);
	if(p == NULL)
	{
		printf("文件打开失败!\n");
		return ;
	}
	p = p->next;  //跳过头节点
	while(p->next != NULL)
	{
		p = p->next;
	}
	struct userLink *new = creatUser(data);
	p->next = new;
	new->next = NULL;
}

//加载文件
void loadUser(struct userLink* p)
{
	if(p == NULL)
	{
		printf("头节点为空!\n");
		return ;
	}
	FILE* fp = fopen("./data/user/user.data","r");
	if(fp == NULL)
	{
		printf("加载文件中...!\n");
		return ;
	}
	struct user data;  //创建一个临时变量用来保存从文件中读取的数据
	while(1)
	{
		int res = fread(&data,sizeof(struct user),1,fp);  //将数据存到临时变量中，并返回读取的字节数
		if(res<1)
		{
			break;
		}
		insertAfterUser(p,data);
		fclose(fp);
	}
}

void saveUser(struct userLink* p)
{
	if(p == NULL)
	{
		printf("头节点为空!\n");
		return ;
	}
	FILE* fp = fopen("./data/user/user.data","w");
	if(fp == NULL)
	{
		printf("写入文件失败!\n");
		return ;
	}
	p = p->next;   //跳过头节点
	while(p != NULL)
	{
		fwrite(&p->data,sizeof(struct user),1,fp);
		p = p->next;
	}
	fclose(fp);
}
